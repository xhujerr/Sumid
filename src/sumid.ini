[main]
# Numeric pattern.
pattern=\d+
# urlWordsSeparators=. # 026 Well nice idea to have it here, but how to write a comma?

[log]
#logDir=/home/sumid.results/prelinklist25
#logDir=/home/sumid.results/2K_links.txt
#logDir=/home/sumid.results/30K_links.txt
logDir=/home/sumid.results/regrTest-026-experimental-20120406
#logDir=/home/sumid.results/links.20110517
#logDir=/home/sumid.results/sls
mainLogFileName=sumid.log
hitsLogFileName=hits.log
cllsLogFileName=clls.log
countersLogFileName=counters.csv
missLogFileName=miss.log
nopLogFileName=noPattern.log
mainLogLevel=DEBUG
# hitsLogLevel also used for cllLogger and misLogger and cntLogger
# Shall remain at least at INFO. Otherwise any hits/cll wouldn't be logged.
hitsLogLevel=DEBUG
comptreeLogLevel=DEBUG
debugRestricted=XMLDebug.flushXMLChunk
debugAllowedLevels=0,1,2,3,4

[files]
# Takes care about all files, except log files.
# Link list shouldn't be predefined at all. It should be mandatory command line parameter.
#linklistURL=file:///home/sumid.results/sls.201105/links.20110520-20110531.lst
#linklistURL=file:///home/sumid.results/sls.201105/sls.201105.daily/links.20110517.log
#linklistURL=file:///media/KINGSTON/Sumid/linklist/prelinklist24.txt
#linklistURL=file:///home/sumid.linklist/clls.20100827.log
#linklistURL=file:///home/sumid.linklist/2K_links.txt
linklistURL=file:///media/KINGSTON/Sumid/linklist/regrTest-linklist26-Sumid.026-experimental.txt
#linklistURL=file:///media/KINGSTON/Sumid/linklist/regrTest-Sumid.025f.txt
#workDir=/home/sumid.results/clls.20100827.log
#workDir=/home/sumid.results/2K_links.txt
workDir=/home/sumid.results/regrTest-026-experimental-20120406
#workDir=/home/sumid.results/links.20110517
#workDir=/home/sumid.results/sls
#workDir=/home/sumid.results/prelinklist25

[httpResponse]
# If forceMIMETypes is set to false, all files will be downloaded. Else only types in allowedMIMETypes.
forceMIMETypes=False

[compTree]
# after <previousRange> of unsuccessful fileFetching will node downloading break
previousRange=3

[threads]
# Should set a maximum, but current implementation creates maximum right away.
linklistSupplierCount=1
compTreeProducerCount=1 
compTreeProcessorCount=8 
counterSupervisorCount=1
# If maxsize is less than or equal to zero, the queue size is infinite.
linksQueueMaxsize=8
nodeQueueMaxsize=8
comptreeResultsMaxsize=0
